name: Gradle Build Workflow

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379

      # Zookeeper 서비스 추가
      zookeeper:
        image: confluentinc/cp-zookeeper:latest
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000

      # 카프카 서비스
      kafka:
        image: confluentinc/cp-kafka:7.3.2
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

      # RabbitMQ
      rabbitmq:
        image: rabbitmq:management
        ports:
          - 15672:15672    # RabbitMQ management UI 포트
          - 5672:5672      # RabbitMQ AMQP 포트
          - 61613:61613    # STOMP 포트
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest

    steps:
      # - name: Enable RabbitMQ STOMP plugin
      #   run: rabbitmq-plugins enable rabbitmq_stomp

      - name: container name confirm
        run: docker ps

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        working-directory: ./backend
        run: chmod +x ./gradlew

      - name: Set MongoDB URI
        run: echo "TEST_MONGO_DB_URI=${{ secrets.TEST_MONGO_DB_URI }}" >> $GITHUB_ENV

      - name: Build with Gradle
        working-directory: ./backend
        run: ./gradlew clean build -x test --stacktrace --info

      - name: Run Unit & Integration Tests (Excluding Concurrency Tests)
        working-directory: ./backend
        run: ./gradlew clean test -PexcludeTags=concurrency --no-build-cache --stacktrace --info

      - name: Start Redis and configure
        run: |
          for container in $(docker ps -q --filter "ancestor=redis:latest"); do
            echo "Configuring Redis for container: $container"
            docker exec "$container" redis-cli CONFIG SET notify-keyspace-events Ex
            docker exec "$container" redis-cli CONFIG GET notify-keyspace-events
          done

      - name: Create file storage directory for tests
        working-directory: ./backend
        run: |
          mkdir -p testUploads
          chmod 777 testUploads
